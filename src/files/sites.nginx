server {
  listen 8080;

  resolver DNS_RESOLVER_IP;

  # Use variable to force dynamic DNS resolution as per
  # https://tenzer.dk/nginx-with-dynamic-upstreams/.
  # Without this nginx caches DNS lookups on startup and never updates
  # them.
  set $connector_upstream CONNECTOR_URL;
  set $directdebit_connector_upstream DD_CONNECTOR_URL;

  server_tokens off;

  server_name notifications;
  client_body_buffer_size 5m;
  client_max_body_size 5m;

  # Health check url
  location /healthcheck {
    set $http_x_request_id $request_id;
    return 200 'OK';
    add_header Content-Type text/plain;
  }

  # Request denied
  location /request-denied {
    set $http_x_request_id $request_id;
    return 400 'DENIED';
    add_header Content-Type text/plain;
  }

  location /v1/api/notifications {
    set $http_x_request_id $request_id;

    include /etc/nginx/naxsi.rules;
    include /etc/nginx/naxsi_connector_whitelist.rules;

    # Ensure that path part of url is propagated to upstream when
    # using proxy_pass with variable
    rewrite ^/(.*)$ /$1 break;
    proxy_pass $connector_upstream;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Request-Id $http_x_request_id;
    proxy_connect_timeout 15s;
    proxy_buffering off;
  }

  location /v1/webhooks/gocardless {
    set $http_x_request_id $request_id;

    include /etc/nginx/naxsi.rules;
    include /etc/nginx/naxsi_dd_connector_whitelist.rules;

    # Ensure that path part of url is propagated to upstream when
    # using proxy_pass with variable
    rewrite ^/(.*)$ /$1 break;
    proxy_pass $directdebit_connector_upstream;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Request-Id $http_x_request_id;
    proxy_connect_timeout 15s;
    proxy_buffering off;
  }
}
